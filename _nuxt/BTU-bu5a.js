import{r as w,v as i,x as d,y as t,H as D,I as F,z as r,G as k,J as U,_ as S,E as C,A as P,C as g,K as x,L as I}from"./BZwsa3xN.js";function $(){let f=null;const p=async()=>{try{return console.log("Requesting directory access..."),f=await window.showDirectoryPicker({id:"RP2350",mode:"readwrite"}),console.log("Directory selected:",f),f}catch(e){return console.error("Failed to access directory:",e),null}},m=async(e,u=(c,s)=>{})=>{if(!f){console.error("No directory selected. Please connect first.");return}try{console.log("Uploading file:",e.name);const a=await(await(await f.getDirectoryHandle("BIN",{create:!0})).getFileHandle(e.name,{create:!0})).createWritable(),n=await e.arrayBuffer(),l=n.byteLength,v=64*1024;let N=0;for(let h=0;h<l;h+=v){const _=n.slice(h,h+v);await a.write(_),N+=_.byteLength,u(N,l)}await a.close(),console.log("File successfully written to directory.")}catch(c){console.error("Failed to upload file:",c)}},o=()=>{f=null,console.log("Disconnected from directory.")},y=e=>{const u=[];for(let s=0;s<e.byteLength;s+=512){const a=new Uint8Array(e,s,512);u.push(a)}return u};return{connect:p,uploadBinary:m,disconnect:o,uploadUF2:async(e,u)=>{if(!e.value){console.error("Device is not connected.");return}try{const c=await u.arrayBuffer(),s=y(c);console.log(`Parsed ${s.length} UF2 blocks.`);for(let a=0;a<s.length;a++){const n=s[a];await e.value.transferOut(1,n),console.log(`Uploaded block ${a+1}/${s.length}`)}console.log("UF2 upload complete!")}catch(c){console.error("Error uploading UF2:",c)}},parseUF2File:y}}const R={class:"border-2 border-dashed border-gray-300 rounded-lg p-6 flex flex-col items-center"},B={class:"mt-4"},V={key:0,class:"mt-4 text-gray-600"},q={key:1,class:"mt-2 text-sm text-gray-500"},H={key:2,class:"mt-4 w-full bg-gray-200 rounded-full h-4"},E={__name:"FileUploader",setup(f){const{connect:p,uploadBinary:m}=$(),o=w(""),y=w(null),b=w(""),e=w(0),u=()=>{y.value?.click()},c=async n=>{const l=n.target.files[0];l&&await a(l)},s=async n=>{const l=n.dataTransfer.files[0];l&&await a(l)},a=async n=>{n.name.endsWith(".uf2")||n.name.endsWith(".bin")?(o.value=n.name,b.value="Uploading...",e.value=0,await m(n,(l,v)=>{e.value=Math.round(l/v*100)}),e.value===100&&(b.value=`Upload complete! (${n.name})`)):b.value="Invalid file type. Only .uf2 and .bin files are allowed."};return(n,l)=>(i(),d("div",R,[t("button",{class:"bg-green-500 text-white px-4 py-2 rounded-md hover:bg-green-600 mb-4",onClick:l[0]||(l[0]=(...v)=>D(p)&&D(p)(...v))}," Connect to RP2350 "),t("div",{class:"w-full h-32 bg-gray-50 flex items-center justify-center border-2 border-dashed border-gray-300 rounded-md",onDragover:l[1]||(l[1]=F(()=>{},["prevent"])),onDrop:F(s,["prevent"])},l[2]||(l[2]=[t("p",{class:"text-gray-600"},"Drag and drop a .uf2 or .bin file here",-1)]),32),t("div",B,[t("input",{type:"file",accept:".uf2,.bin",ref_key:"fileInput",ref:y,class:"hidden",onChange:c},null,544),t("button",{class:"bg-blue-500 text-white px-4 py-2 rounded-md hover:bg-blue-600",onClick:u}," Upload .uf2 or .bin File ")]),o.value?(i(),d("p",V,"Selected: "+r(o.value),1)):k("",!0),b.value?(i(),d("p",q,r(b.value),1)):k("",!0),e.value>0?(i(),d("div",H,[t("div",{class:"bg-blue-500 h-4 rounded-full transition-all duration-200",style:U({width:e.value+"%"})},null,4)])):k("",!0)]))}},z={class:"min-h-screen bg-black text-white flex flex-col py-8 px-6"},L={class:"grid grid-cols-1 md:grid-cols-2 gap-8"},T={class:"bg-gray-900 p-6 rounded-lg shadow-lg border-l-4 border-neon-blue"},A={class:"bg-gray-900 p-6 rounded-lg shadow-lg border-l-4 border-neon-pink mt-12"},M={key:0},O={class:"list-disc list-inside space-y-2 mt-4 text-gray-300"},W={key:1,class:"text-gray-500"},G={key:2,class:"mt-8"},j={class:"list-disc list-inside space-y-4 text-gray-300"},J={class:"list-inside ml-6 space-y-2"},K={class:"list-disc list-inside ml-6"},Q={class:"list-disc list-inside ml-6"},X={__name:"index",setup(f){const p=w(null),m=w([]),o=w(null),y=async()=>{try{if(o.value=await navigator.usb.requestDevice({filters:[{vendorId:11914}]}),!o.value){console.error("No RP2350 device found.");return}await o.value.open(),await o.value.selectConfiguration(1),await o.value.claimInterface(1),p.value={productName:o.value.productName,manufacturerName:o.value.manufacturerName,serialNumber:o.value.serialNumber,vendorId:`0x${o.value.vendorId.toString(16)}`,productId:`0x${o.value.productId.toString(16)}`},m.value=o.value.configurations.map(b=>({configurationValue:b.configurationValue,interfaces:b.interfaces.map(e=>({interfaceNumber:e.interfaceNumber,alternateSetting:e.alternateSetting,endpoints:e.alternates[0].endpoints.map(u=>({type:u.type,direction:u.direction}))}))})),console.log("Device Configurations:",m.value)}catch(b){console.error("Failed to inspect device:",b)}};return(b,e)=>{const u=E;return i(),d("div",z,[t("div",L,[e[0]||(e[0]=C('<div class="bg-gray-900 p-6 rounded-lg shadow-lg border-l-4 border-neon-green" data-v-4de91521><h2 class="text-2xl font-bold mb-4 text-neon-green" data-v-4de91521>How to Use</h2><ol class="list-decimal list-inside space-y-4 text-gray-300" data-v-4de91521><li data-v-4de91521> Click the <b data-v-4de91521>&quot;Connect to RP2350&quot;</b> button to connect to your device.value. </li><li data-v-4de91521> Grant access to the RP2350&#39;s filesystem (its mount point). </li><li data-v-4de91521> Upload a <b data-v-4de91521>.uf2</b> or <b data-v-4de91521>.bin</b> file: <ul class="list-disc list-inside ml-6 space-y-2" data-v-4de91521><li data-v-4de91521>Drag and drop the file into the upload area.</li><li data-v-4de91521>OR click the <b data-v-4de91521>&quot;Upload File&quot;</b> button to select a file from your computer.</li></ul></li><li data-v-4de91521> Inspect the connected device details using the <b data-v-4de91521>&quot;Inspect RP2350&quot;</b> section below. </li></ol><p class="mt-4 text-gray-500" data-v-4de91521> Note: Ensure your device is mounted and the site is served over HTTPS. </p></div>',1)),t("div",T,[P(u)])]),t("div",A,[e[13]||(e[13]=t("h2",{class:"text-2xl font-bold mb-4 text-neon-pink"},"Inspect RP2350",-1)),t("button",{class:"bg-neon-blue text-black px-4 py-2 rounded-md font-bold hover:bg-blue-400 shadow-md hover:shadow-lg mb-4",onClick:y}," Inspect RP2350 "),p.value?(i(),d("div",M,[e[6]||(e[6]=t("p",{class:"font-bold"},"Device Information:",-1)),t("ul",O,[t("li",null,[e[1]||(e[1]=t("b",null,"Product Name:",-1)),g(" "+r(p.value.productName||"Unknown"),1)]),t("li",null,[e[2]||(e[2]=t("b",null,"Manufacturer:",-1)),g(" "+r(p.value.manufacturerName||"Unknown"),1)]),t("li",null,[e[3]||(e[3]=t("b",null,"Serial Number:",-1)),g(" "+r(p.value.serialNumber||"Unknown"),1)]),t("li",null,[e[4]||(e[4]=t("b",null,"Vendor ID:",-1)),g(" "+r(p.value.vendorId),1)]),t("li",null,[e[5]||(e[5]=t("b",null,"Product ID:",-1)),g(" "+r(p.value.productId),1)])])])):(i(),d("p",W,' No device information available. Click "Inspect RP2350" to begin. ')),m.value.length?(i(),d("div",G,[e[12]||(e[12]=t("p",{class:"font-bold text-neon-green"},"Device Configurations:",-1)),(i(!0),d(x,null,I(m.value,(c,s)=>(i(),d("div",{key:s,class:"mt-6"},[t("p",null,[t("b",null,"Configuration "+r(s+1)+":",1)]),t("ul",j,[t("li",null,[e[7]||(e[7]=t("b",null,"Configuration Value:",-1)),g(" "+r(c.configurationValue),1)]),e[11]||(e[11]=t("li",null,[t("b",null,"Interfaces:")],-1)),t("ul",J,[(i(!0),d(x,null,I(c.interfaces,(a,n)=>(i(),d("li",{key:n,class:"space-y-2"},[t("b",null,"Interface "+r(n+1)+":",1),t("ul",K,[t("li",null,[e[8]||(e[8]=t("b",null,"Interface Number:",-1)),g(" "+r(a.interfaceNumber),1)]),t("li",null,[e[9]||(e[9]=t("b",null,"Alternate Setting:",-1)),g(" "+r(a.alternateSetting),1)]),t("li",null,[e[10]||(e[10]=t("b",null,"Endpoints:",-1)),t("ul",Q,[(i(!0),d(x,null,I(a.endpoints,(l,v)=>(i(),d("li",{key:v},[t("b",null,"Endpoint "+r(v+1)+":",1),g(" "+r(l.type)+" ("+r(l.direction)+") ",1)]))),128))])])])]))),128))])])]))),128))])):k("",!0)])])}}},Z=S(X,[["__scopeId","data-v-4de91521"]]);export{Z as default};
